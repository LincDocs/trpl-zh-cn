import{_ as e,e as c,j as r,o}from"./app-oyO3eSzo.js";const s={};function n(a,t){return o(),c("div",null,t[0]||(t[0]=[r('<h1 id="使用结构体组织相关联的数据" tabindex="-1"><a class="header-anchor" href="#使用结构体组织相关联的数据"><span>使用结构体组织相关联的数据</span></a></h1><blockquote><p><a href="https://github.com/rust-lang/book/blob/main/src/ch05-00-structs.md" target="_blank" rel="noopener noreferrer">ch05-00-structs.md</a><br><br><br> commit 8612c4a5801b61f8d2e952f8bbbb444692ff1ec2</p></blockquote><p><em>struct</em>，或者 <em>structure</em>，是一个自定义数据类型，允许你包装和命名多个相关的值，从而形成一个有意义的组合。如果你熟悉一门面向对象语言，<em>struct</em> 就像对象中的数据属性。在本章中，我们会对元组和结构体进行比较和对比。</p><p>我们还将演示如何定义和实例化结构体，并讨论如何定义关联函数，特别是被称为 <em>方法</em> 的那种关联函数，以指定与结构体类型相关的行为。你可以在程序中基于结构体和枚举（<em>enum</em>）（在第六章介绍）创建新类型，以充分利用 Rust 的编译时类型检查。</p>',4)]))}const i=e(s,[["render",n],["__file","ch05-00-structs.html.vue"]]),l=JSON.parse('{"path":"/ch05-00-structs.html","title":"使用结构体组织相关联的数据","lang":"zh-CN","frontmatter":{"description":"使用结构体组织相关联的数据 ch05-00-structs.md commit 8612c4a5801b61f8d2e952f8bbbb444692ff1ec2 struct，或者 structure，是一个自定义数据类型，允许你包装和命名多个相关的值，从而形成一个有意义的组合。如果你熟悉一门面向对象语言，struct 就像对象中的数据属性。在本章中，...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/trpl-zh-cn/ch05-00-structs.html"}],["meta",{"property":"og:site_name","content":"trpl-zh-cn"}],["meta",{"property":"og:title","content":"使用结构体组织相关联的数据"}],["meta",{"property":"og:description","content":"使用结构体组织相关联的数据 ch05-00-structs.md commit 8612c4a5801b61f8d2e952f8bbbb444692ff1ec2 struct，或者 structure，是一个自定义数据类型，允许你包装和命名多个相关的值，从而形成一个有意义的组合。如果你熟悉一门面向对象语言，struct 就像对象中的数据属性。在本章中，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用结构体组织相关联的数据\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/trpl-zh-cn/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.69,"words":207},"filePathRelative":"ch05-00-structs.md","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/rust-lang/book/blob/main/src/ch05-00-structs.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ch05-00-structs.md</a><br>\\n<br><br>\\ncommit 8612c4a5801b61f8d2e952f8bbbb444692ff1ec2</p>\\n</blockquote>\\n<p><em>struct</em>，或者 <em>structure</em>，是一个自定义数据类型，允许你包装和命名多个相关的值，从而形成一个有意义的组合。如果你熟悉一门面向对象语言，<em>struct</em> 就像对象中的数据属性。在本章中，我们会对元组和结构体进行比较和对比。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"README","link":"README.html"},{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"ch05-00-structs.md","value":{"title":"ch05-00-structs","path":"ch05-00-structs.md","outlink":[],"backlink":["README.md","SUMMARY.md"]}},{"id":"README.md","value":{"title":"README","path":"README.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"README.md","target":"ch05-00-structs.md"},{"source":"SUMMARY.md","target":"ch05-00-structs.md"}]}}}');export{i as comp,l as data};
