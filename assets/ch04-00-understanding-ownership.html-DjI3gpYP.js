import{_ as n,c as r,a as e,d as a,o}from"./app-DUZ3wyEq.js";const i={};function c(d,t){return o(),r("div",null,t[0]||(t[0]=[e("h1",{id:"认识所有权",tabindex:"-1"},"认识所有权",-1),e("blockquote",null,[e("p",null,[e("a",{href:"https://github.com/rust-lang/book/blob/main/src/ch04-00-understanding-ownership.md",target:"_blank",rel:"noopener noreferrer"},"ch04-00-understanding-ownership.md"),e("br"),e("br"),e("br"),a(" commit a5e0c5b2c5f9054be3b961aea2c7edfeea591de8")])],-1),e("p",null,"所有权（系统）是 Rust 最为与众不同的特性，对语言的其他部分有着深刻含义。它让 Rust 无需垃圾回收（garbage collector）即可保障内存安全，因此理解 Rust 中所有权如何工作是十分重要的。本章，我们将讲到所有权以及相关功能：借用（borrowing）、slice 以及 Rust 如何在内存中布局数据。",-1)]))}const l=n(i,[["render",c]]),p=JSON.parse('{"path":"/ch04-00-understanding-ownership.html","title":"认识所有权","lang":"zh-CN","frontmatter":{"description":"认识所有权 ch04-00-understanding-ownership.md commit a5e0c5b2c5f9054be3b961aea2c7edfeea591de8 所有权（系统）是 Rust 最为与众不同的特性，对语言的其他部分有着深刻含义。它让 Rust 无需垃圾回收（garbage collector）即可保障内存安全，因此理解 Ru...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"认识所有权\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/trpl-zh-cn/ch04-00-understanding-ownership.html"}],["meta",{"property":"og:site_name","content":"trpl-zh-cn"}],["meta",{"property":"og:title","content":"认识所有权"}],["meta",{"property":"og:description","content":"认识所有权 ch04-00-understanding-ownership.md commit a5e0c5b2c5f9054be3b961aea2c7edfeea591de8 所有权（系统）是 Rust 最为与众不同的特性，对语言的其他部分有着深刻含义。它让 Rust 无需垃圾回收（garbage collector）即可保障内存安全，因此理解 Ru..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":0.4,"words":119},"filePathRelative":"ch04-00-understanding-ownership.md","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/rust-lang/book/blob/main/src/ch04-00-understanding-ownership.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ch04-00-understanding-ownership.md</a><br>\\n<br><br>\\ncommit a5e0c5b2c5f9054be3b961aea2c7edfeea591de8</p>\\n</blockquote>\\n<p>所有权（系统）是 Rust 最为与众不同的特性，对语言的其他部分有着深刻含义。它让 Rust 无需垃圾回收（garbage collector）即可保障内存安全，因此理解 Rust 中所有权如何工作是十分重要的。本章，我们将讲到所有权以及相关功能：借用（borrowing）、slice 以及 Rust 如何在内存中布局数据。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"README","link":"README.html"},{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"ch04-00-understanding-ownership.md","value":{"title":"ch04-00-understanding-ownership","path":"ch04-00-understanding-ownership.md","outlink":[],"backlink":["README.md","SUMMARY.md"]}},{"id":"README.md","value":{"title":"README","path":"README.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"README.md","target":"ch04-00-understanding-ownership.md"},{"source":"SUMMARY.md","target":"ch04-00-understanding-ownership.md"}]}}}');export{l as comp,p as data};
