import{_ as c,c as o,e as s,a as t,d as a,b as n,w as i,r as l,o as d}from"./app-BTkjaAF8.js";const p={};function m(g,e){const r=l("RouteLink");return d(),o("div",null,[e[14]||(e[14]=s('<h2 id="包和-crate" tabindex="-1">包和 Crate</h2><blockquote><p><a href="https://github.com/rust-lang/book/blob/main/src/ch07-01-packages-and-crates.md" target="_blank" rel="noopener noreferrer">ch07-01-packages-and-crates.md</a><br><br><br> commit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c</p></blockquote><p>模块系统的第一部分，我们将介绍包和 crate。</p><p>crate 是 Rust 在编译时最小的代码单位。如果你用 <code>rustc</code> 而不是 <code>cargo</code> 来编译一个文件（第一章我们这么做过），编译器还是会将那个文件认作一个 crate。crate 可以包含模块，模块可以定义在其他文件，然后和 crate 一起编译，我们会在接下来的章节中遇到。</p><p>crate 有两种形式：二进制项和库。<em>二进制项</em> 可以被编译为可执行程序，比如一个命令行程序或者一个 web server。它们必须有一个 <code>main</code> 函数来定义当程序被执行的时候所需要做的事情。目前我们所创建的 crate 都是二进制项。</p>',5)),t("p",null,[e[1]||(e[1]=t("em",null,"库",-1)),e[2]||(e[2]=a(" 并没有 ")),e[3]||(e[3]=t("code",null,"main",-1)),e[4]||(e[4]=a(" 函数，它们也不会编译为可执行程序，它们提供一些诸如函数之类的东西，使其他项目也能使用这些东西。比如 ")),n(r,{to:"/ch02-00-guessing-game-tutorial.html#%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E6%95%B0"},{default:i(()=>e[0]||(e[0]=[a("第二章")])),_:1,__:[0]}),e[5]||(e[5]=a(" 的 ")),e[6]||(e[6]=t("code",null,"rand",-1)),e[7]||(e[7]=a(" crate 就提供了生成随机数的东西。大多数时间 ")),e[8]||(e[8]=t("code",null,"Rustaceans",-1)),e[9]||(e[9]=a(" 说的 crate 指的都是库，这与其他编程语言中 library 概念一致。"))]),t("p",null,[e[11]||(e[11]=t("em",null,"crate root",-1)),e[12]||(e[12]=a(" 是一个源文件，Rust 编译器以它为起始点，并构成你的 crate 的根模块（我们将在 ")),n(r,{to:"/ch07-02-defining-modules-to-control-scope-and-privacy.html"},{default:i(()=>e[10]||(e[10]=[a("“定义模块来控制作用域与私有性”")])),_:1,__:[10]}),e[13]||(e[13]=a(" 一节深入解读）。"))]),e[15]||(e[15]=s(`<p><em>包</em>（<em>package</em>）是提供一系列功能的一个或者多个 crate。一个包会包含一个 <em>Cargo.toml</em> 文件，阐述如何去构建这些 crate。Cargo 就是一个包含构建你代码的二进制项的包。Cargo 也包含这些二进制项所依赖的库。其他项目也能用 Cargo 库来实现与 Cargo 命令行程序一样的逻辑。</p><p>包中可以包含至多一个库 crate(library crate)。包中可以包含任意多个二进制 crate(binary crate)，但是必须至少包含一个 crate（无论是库的还是二进制的）。</p><p>让我们来看看创建包的时候会发生什么。首先，我们输入命令 <code>cargo new</code>：</p><div class="language-console line-numbers-mode" data-highlighter="shiki" data-ext="console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-console"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ cargo new my-project</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     Created binary (application) \`my-project\` package</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ ls my-project</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ ls my-project/src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">main.rs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行了这条命令后，我们先用 <code>ls</code> （译者注：此命令为 Linux 平台的指令，Windows 下可用 dir）来看看 Cargo 给我们创建了什么，Cargo 会给我们的包创建一个 <em>Cargo.toml</em> 文件。查看 <em>Cargo.toml</em> 的内容，会发现并没有提到 <em>src/main.rs</em>，因为 Cargo 遵循的一个约定：<em>src/main.rs</em> 就是一个与包同名的二进制 crate 的 crate 根。同样的，Cargo 知道如果包目录中包含 <em>src/lib.rs</em>，则包带有与其同名的库 crate，且 <em>src/lib.rs</em> 是 crate 根。crate 根文件将由 Cargo 传递给 <code>rustc</code> 来实际构建库或者二进制项目。</p><p>在此，我们有了一个只包含 <em>src/main.rs</em> 的包，意味着它只含有一个名为 <code>my-project</code> 的二进制 crate。如果一个包同时含有 <em>src/main.rs</em> 和 <em>src/lib.rs</em>，则它有两个 crate：一个二进制的和一个库的，且名字都与包相同。通过将文件放在 <em>src/bin</em> 目录下，一个包可以拥有多个二进制 crate：每个 <em>src/bin</em> 下的文件都会被编译成一个独立的二进制 crate。</p>`,6))])}const u=c(p,[["render",m]]),h=JSON.parse('{"path":"/ch07-01-packages-and-crates.html","title":"ch07-01-packages-and-crates","lang":"zh-CN","frontmatter":{"description":"包和 Crate ch07-01-packages-and-crates.md commit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c 模块系统的第一部分，我们将介绍包和 crate。 crate 是 Rust 在编译时最小的代码单位。如果你用 rustc 而不是 cargo 来编译一个文件（第一章我们这么做过）...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/trpl-zh-cn/ch07-01-packages-and-crates.html"}],["meta",{"property":"og:site_name","content":"trpl-zh-cn"}],["meta",{"property":"og:description","content":"包和 Crate ch07-01-packages-and-crates.md commit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c 模块系统的第一部分，我们将介绍包和 crate。 crate 是 Rust 在编译时最小的代码单位。如果你用 rustc 而不是 cargo 来编译一个文件（第一章我们这么做过）..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":2.84,"words":853},"filePathRelative":"ch07-01-packages-and-crates.md","excerpt":"<h2>包和 Crate</h2>\\n<blockquote>\\n<p><a href=\\"https://github.com/rust-lang/book/blob/main/src/ch07-01-packages-and-crates.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ch07-01-packages-and-crates.md</a><br>\\n<br><br>\\ncommit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c</p>\\n</blockquote>\\n<p>模块系统的第一部分，我们将介绍包和 crate。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"README","link":"README.html"},{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"ch07-01-packages-and-crates.md","value":{"title":"ch07-01-packages-and-crates","path":"ch07-01-packages-and-crates.md","outlink":[],"backlink":["README.md","SUMMARY.md"]}},{"id":"README.md","value":{"title":"README","path":"README.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"README.md","target":"ch07-01-packages-and-crates.md"},{"source":"SUMMARY.md","target":"ch07-01-packages-and-crates.md"}]}}}');export{u as comp,h as data};
