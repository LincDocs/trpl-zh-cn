import{_ as i,e as d,j as p,f as n,i as o,g as r,h as l,r as a,o as s}from"./app-oyO3eSzo.js";const m={};function u(c,t){const e=a("RouteLink");return s(),d("div",null,[t[20]||(t[20]=p('<h1 id="一个-i-o-项目-构建一个命令行程序" tabindex="-1"><a class="header-anchor" href="#一个-i-o-项目-构建一个命令行程序"><span>一个 I/O 项目：构建一个命令行程序</span></a></h1><blockquote><p><a href="https://github.com/rust-lang/book/blob/main/src/ch12-00-an-io-project.md" target="_blank" rel="noopener noreferrer">ch12-00-an-io-project.md</a><br><br><br> commit 02a168ed346042f07010f8b65b4eeed623dd31d1</p></blockquote><p>本章既是一个目前所学的很多技能的概括，也是一个更多标准库功能的探索。我们将构建一个与文件和命令行输入/输出交互的命令行工具来练习现在一些你已经掌握的 Rust 技能。</p><p>Rust 的运行速度、安全性、单二进制文件输出和跨平台支持使其成为创建命令行程序的绝佳选择，所以我们的项目将创建一个我们自己版本的经典命令行搜索工具：<code>grep</code>。grep 是 “<strong>G</strong>lobally search a <strong>R</strong>egular <strong>E</strong>xpression and <strong>P</strong>rint.” 的首字母缩写。<code>grep</code> 最简单的使用场景是在特定文件中搜索指定字符串。为此，<code>grep</code> 获取一个文件路径和一个字符串作为参数，接着读取文件并找到其中包含字符串参数的行，然后打印出这些行。</p><p>在这个过程中，我们会展示如何让我们的命令行工具利用很多命令行工具中用到的终端功能。读取环境变量来使得用户可以配置工具的行为。打印到标准错误控制流（<code>stderr</code>）而不是标准输出（<code>stdout</code>），例如这样用户可以选择将成功输出重定向到文件中的同时仍然在屏幕上显示错误信息。</p><p>一位 Rust 社区的成员，Andrew Gallant，已经创建了一个功能完整且非常快速的 <code>grep</code> 版本，叫做 <code>ripgrep</code>。相比之下，我们的版本将非常简单，本章将教会你一些帮助理解像 <code>ripgrep</code> 这样真实项目的背景知识。</p><p>我们的 <code>grep</code> 项目将会结合之前所学的一些内容：</p>',7)),n("ul",null,[n("li",null,[t[1]||(t[1]=o("代码组织（使用 ")),r(e,{to:"/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html"},{default:l(()=>t[0]||(t[0]=[o("第七章")])),_:1}),t[2]||(t[2]=o(" 学习的模块）"))]),n("li",null,[t[4]||(t[4]=o("vector 和字符串（")),r(e,{to:"/ch08-00-common-collections.html"},{default:l(()=>t[3]||(t[3]=[o("第八章")])),_:1}),t[5]||(t[5]=o("，集合）"))]),n("li",null,[t[7]||(t[7]=o("错误处理（")),r(e,{to:"/ch09-00-error-handling.html"},{default:l(()=>t[6]||(t[6]=[o("第九章")])),_:1}),t[8]||(t[8]=o("）"))]),n("li",null,[t[10]||(t[10]=o("合理的使用 trait 和生命周期（")),r(e,{to:"/ch10-00-generics.html"},{default:l(()=>t[9]||(t[9]=[o("第十章")])),_:1}),t[11]||(t[11]=o("）"))]),n("li",null,[t[13]||(t[13]=o("测试（")),r(e,{to:"/ch11-00-testing.html"},{default:l(()=>t[12]||(t[12]=[o("第十一章")])),_:1}),t[14]||(t[14]=o("）"))])]),n("p",null,[t[17]||(t[17]=o("另外还会简要的讲到闭包、迭代器和 trait 对象，它们分别会在 ")),r(e,{to:"/ch13-00-functional-features.html"},{default:l(()=>t[15]||(t[15]=[o("第十三章")])),_:1}),t[18]||(t[18]=o(" 和 ")),r(e,{to:"/ch18-00-oop.html"},{default:l(()=>t[16]||(t[16]=[o("第十八章")])),_:1}),t[19]||(t[19]=o(" 中详细介绍。"))])])}const b=i(m,[["render",u],["__file","ch12-00-an-io-project.html.vue"]]),f=JSON.parse('{"path":"/ch12-00-an-io-project.html","title":"一个 I/O 项目：构建一个命令行程序","lang":"zh-CN","frontmatter":{"description":"一个 I/O 项目：构建一个命令行程序 ch12-00-an-io-project.md commit 02a168ed346042f07010f8b65b4eeed623dd31d1 本章既是一个目前所学的很多技能的概括，也是一个更多标准库功能的探索。我们将构建一个与文件和命令行输入/输出交互的命令行工具来练习现在一些你已经掌握的 Rust 技能。 ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/trpl-zh-cn/ch12-00-an-io-project.html"}],["meta",{"property":"og:site_name","content":"trpl-zh-cn"}],["meta",{"property":"og:title","content":"一个 I/O 项目：构建一个命令行程序"}],["meta",{"property":"og:description","content":"一个 I/O 项目：构建一个命令行程序 ch12-00-an-io-project.md commit 02a168ed346042f07010f8b65b4eeed623dd31d1 本章既是一个目前所学的很多技能的概括，也是一个更多标准库功能的探索。我们将构建一个与文件和命令行输入/输出交互的命令行工具来练习现在一些你已经掌握的 Rust 技能。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一个 I/O 项目：构建一个命令行程序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/trpl-zh-cn/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.01,"words":603},"filePathRelative":"ch12-00-an-io-project.md","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/rust-lang/book/blob/main/src/ch12-00-an-io-project.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ch12-00-an-io-project.md</a><br>\\n<br><br>\\ncommit 02a168ed346042f07010f8b65b4eeed623dd31d1</p>\\n</blockquote>\\n<p>本章既是一个目前所学的很多技能的概括，也是一个更多标准库功能的探索。我们将构建一个与文件和命令行输入/输出交互的命令行工具来练习现在一些你已经掌握的 Rust 技能。</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"README","link":"README.html"},{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"ch12-00-an-io-project.md","value":{"title":"ch12-00-an-io-project","path":"ch12-00-an-io-project.md","outlink":[],"backlink":["README.md","SUMMARY.md"]}},{"id":"README.md","value":{"title":"README","path":"README.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"README.md","target":"ch12-00-an-io-project.md"},{"source":"SUMMARY.md","target":"ch12-00-an-io-project.md"}]}}}');export{b as comp,f as data};
