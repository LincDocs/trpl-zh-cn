import{_ as n,c as r,a as e,e as c,d as a,b as s,w as i,r as g,o as d}from"./app-CXbgoZN5.js";const l={};function m(p,t){const o=g("RouteLink");return d(),r("div",null,[t[3]||(t[3]=e("h1",{id:"使用包、crate-和模块管理不断增长的项目",tabindex:"-1"},"使用包、Crate 和模块管理不断增长的项目",-1)),t[4]||(t[4]=e("blockquote",null,[e("p",null,[e("a",{href:"https://github.com/rust-lang/book/blob/main/src/ch07-00-managing-growing-projects-with-packages-crates-and-modules.md",target:"_blank",rel:"noopener noreferrer"},"ch07-00-managing-growing-projects-with-packages-crates-and-modules.md"),e("br"),e("br"),e("br"),a(" commit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c")])],-1)),t[5]||(t[5]=e("p",null,"当你编写大型程序时，组织你的代码显得尤为重要。通过对相关功能进行分组和划分不同功能的代码，你可以清楚在哪里可以找到实现了特定功能的代码，以及在哪里可以改变一个功能的工作方式。",-1)),e("p",null,[t[1]||(t[1]=a("到目前为止，我们编写的程序都在一个文件的一个模块中。伴随着项目的增长，你应该通过将代码分解为多个模块和多个文件来组织代码。一个包可以包含多个二进制 crate 项和一个可选的 crate 库。伴随着包的增长，你可以将包中的部分代码提取出来，做成独立的 crate，这些 crate 则作为外部依赖项。本章将会涵盖所有这些概念。对于一个由一系列相互关联的包组成的超大型项目，Cargo 提供了 “工作空间” 这一功能，我们将在第十四章的 ")),s(o,{to:"/ch14-03-cargo-workspaces.html"},{default:i(()=>t[0]||(t[0]=[a("“Cargo Workspaces”")])),_:1,__:[0]}),t[2]||(t[2]=a(" 对此进行讲解。"))]),t[6]||(t[6]=c("<p>我们也会讨论封装来实现细节，这可以使你更高级地重用代码：你实现了一个操作后，其他的代码可以通过该代码的公共接口来进行调用，而不需要知道它是如何实现的。你在编写代码时可以定义哪些部分是其他代码可以使用的公共部分，以及哪些部分是你有权更改实现细节的私有部分。这是另一种减少你在脑海中记住项目内容数量的方法。</p><p>这里有一个需要说明的概念 “作用域（scope）”：代码所在的嵌套上下文有一组定义为 “in scope” 的名称。当阅读、编写和编译代码时，程序员和编译器需要知道特定位置的特定名称是否引用了变量、函数、结构体、枚举、模块、常量或者其他有意义的项。你可以创建作用域，以及改变哪些名称在作用域内还是作用域外。同一个作用域内不能拥有两个相同名称的项；可以使用一些工具来解决名称冲突。</p><p>Rust 有许多功能可以让你管理代码的组织，包括哪些内容可以被公开，哪些内容作为私有部分，以及程序每个作用域中的名字。这些功能，有时被统称为 “模块系统（the module system）”，包括：</p><ul><li><strong>包</strong>（<em>Packages</em>）：Cargo 的一个功能，它允许你构建、测试和分享 crate。</li><li><strong>Crates</strong> ：一个模块的树形结构，它形成了库或二进制项目。</li><li><strong>模块</strong>（<em>Modules</em>）和 <strong>use</strong>：允许你控制作用域和路径的私有性。</li><li><strong>路径</strong>（<em>path</em>）：一个命名例如结构体、函数或模块等项的方式。</li></ul><p>本章将会涵盖所有这些概念，讨论它们如何交互，并说明如何使用它们来管理作用域。到最后，你会对模块系统有深入的了解，并且能够像专业人士一样使用作用域！</p>",5))])}const h=n(l,[["render",m]]),k=JSON.parse('{"path":"/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html","title":"使用包、Crate 和模块管理不断增长的项目","lang":"zh-CN","frontmatter":{"description":"使用包、Crate 和模块管理不断增长的项目 ch07-00-managing-growing-projects-with-packages-crates-and-modules.md commit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c 当你编写大型程序时，组织你的代码显得尤为重要。通过对相关功能进行分组和划...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用包、Crate 和模块管理不断增长的项目\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/trpl-zh-cn/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html"}],["meta",{"property":"og:site_name","content":"trpl-zh-cn"}],["meta",{"property":"og:title","content":"使用包、Crate 和模块管理不断增长的项目"}],["meta",{"property":"og:description","content":"使用包、Crate 和模块管理不断增长的项目 ch07-00-managing-growing-projects-with-packages-crates-and-modules.md commit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c 当你编写大型程序时，组织你的代码显得尤为重要。通过对相关功能进行分组和划..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":2.76,"words":829},"filePathRelative":"ch07-00-managing-growing-projects-with-packages-crates-and-modules.md","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/rust-lang/book/blob/main/src/ch07-00-managing-growing-projects-with-packages-crates-and-modules.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ch07-00-managing-growing-projects-with-packages-crates-and-modules.md</a><br>\\n<br><br>\\ncommit c77d7a1279dbc7a9d76e80c5ac9d742dd529538c</p>\\n</blockquote>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"README","link":"README.html"},{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"ch07-00-managing-growing-projects-with-packages-crates-and-modules.md","value":{"title":"ch07-00-managing-growing-projects-with-packages-crates-and-modules","path":"ch07-00-managing-growing-projects-with-packages-crates-and-modules.md","outlink":[],"backlink":["README.md","SUMMARY.md"]}},{"id":"README.md","value":{"title":"README","path":"README.md","outlink":[],"backlink":[]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"README.md","target":"ch07-00-managing-growing-projects-with-packages-crates-and-modules.md"},{"source":"SUMMARY.md","target":"ch07-00-managing-growing-projects-with-packages-crates-and-modules.md"}]}}}');export{h as comp,k as data};
